name: Test shell

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'feature/**'
  workflow_dispatch:
    inputs:
      enable_terminal:
        type: boolean
        description: 'Enable terminal session.'
        required: false
        default: false

env:
  BATS_LIB_PATH: "./node_modules"

jobs:
  test-shell:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-13
          - macos-14
          - macos-15
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install current Bash on macOS
        if: startsWith(matrix.os, 'macos-')
        run: brew install bash

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Config Git user.
        run: git config --global user.name "Test user" && git config --global user.email "someone@example.com"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup sh-checker
        uses: luizm/action-sh-checker@v0.9.0
        if: matrix.os == 'ubuntu-latest'
        env:
          SHFMT_OPTS: -i 2 -ci -s -d

      - name: Install dependencies
        run: npm install

      - name: Install Kcov
        run: |
          KCOV_VERSION=v43 && \
          sudo apt install -y git cmake g++ libcurl4-openssl-dev zlib1g-dev libdw-dev libiberty-dev binutils-dev && \
          git clone https://github.com/SimonKagstrom/kcov.git && \
          cd kcov && git checkout ${KCOV_VERSION} && mkdir build && cd build && \
          cmake .. && make && sudo make install && \
          kcov --version
        if: matrix.os == 'ubuntu-latest'

      - name: Run Tests and Code Coverage on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: kcov --clean --include-pattern=.bash --bash-parse-files-in-dir=. --exclude-path=node_modules,vendor,coverage $(pwd)/coverage ./node_modules/.bin/bats tests
        shell: bash

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          directory: ./coverage
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run Tests on other OSes
        if: matrix.os != 'ubuntu-latest'
        run: ./node_modules/.bin/bats tests
        shell: bash

      - name: Setup tmate session
        if: ${{ !cancelled() && github.event.inputs.enable_terminal }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 5
